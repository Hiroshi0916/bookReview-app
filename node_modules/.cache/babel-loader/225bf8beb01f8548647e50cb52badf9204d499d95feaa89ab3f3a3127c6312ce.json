{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\n// export const AuthContext = createContext();\n\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [avatarUrl, setAvatarUrl] = useState(localStorage.getItem(\"avatarUrl\"));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"token\"));\n  const updateUser = updatedUser => {\n    setUser(prevUser => {\n      if (prevUser === null) return prevUser;\n      return {\n        ...prevUser,\n        ...updatedUser\n      };\n    });\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"avatarUrl\");\n    setAvatarUrl(null);\n  };\n  useEffect(() => {\n    // アバターURLがlocalStorageに存在する場合に設定\n    const storedAvatarUrl = localStorage.getItem(\"avatarUrl\");\n    if (storedAvatarUrl) {\n      setAvatarUrl(storedAvatarUrl);\n    }\n  }, []);\n  useEffect(() => {\n    if (avatarUrl) {\n      localStorage.setItem(\"avatarUrl\", avatarUrl);\n    } else {\n      localStorage.removeItem(\"avatarUrl\");\n    }\n  }, [avatarUrl]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      user,\n      setUser,\n      avatarUrl,\n      setAvatarUrl,\n      logout,\n      updatedUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"gfpf9bcoUtQxG09+uDc1GEZSlis=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","avatarUrl","setAvatarUrl","localStorage","getItem","isAuthenticated","setIsAuthenticated","updateUser","updatedUser","prevUser","logout","removeItem","storedAvatarUrl","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/AuthContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useEffect, useState } from \"react\";\n\nimport { User } from \"./interfaces/User\";\nimport { AuthContextType } from \"./interfaces/AuthContextType\";\n\nexport const AuthContext = createContext<AuthContextType | undefined>(\n  undefined\n);\n\ntype Props = {\n  children: ReactNode;\n};\n\n// export const AuthContext = createContext();\n\nexport function AuthProvider({ children }: Props) {\n  const [user, setUser] = useState<User | null>(null);\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(\n    localStorage.getItem(\"avatarUrl\")\n  );\n\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(\n    !!localStorage.getItem(\"token\")\n  );\n\n  const updateUser = (updatedUser: Partial<User>) => {\n    setUser((prevUser) =>{\nif(prevUser ===null) return prevUser;\nreturn { ...prevUser, ...updatedUser };\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"avatarUrl\");\n    setAvatarUrl(null); \n  };\n\n  useEffect(() => {\n    // アバターURLがlocalStorageに存在する場合に設定\n    const storedAvatarUrl = localStorage.getItem(\"avatarUrl\");\n    if (storedAvatarUrl) {\n      setAvatarUrl(storedAvatarUrl);\n    }\n  }, []);\n\n\n  useEffect(() => {\n    if (avatarUrl) {\n      localStorage.setItem(\"avatarUrl\", avatarUrl);\n    } else {\n      localStorage.removeItem(\"avatarUrl\");\n    }\n  }, [avatarUrl]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        setIsAuthenticated,\n        user,\n        setUser,\n        avatarUrl,\n         setAvatarUrl, \n         logout,\n         updatedUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK7E,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CACtCM,SACF,CAAC;AAMD;;AAEA,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CACxCY,YAAY,CAACC,OAAO,CAAC,WAAW,CAClC,CAAC;EAED,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CACpD,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAChC,CAAC;EAED,MAAMG,UAAU,GAAIC,WAA0B,IAAK;IACjDR,OAAO,CAAES,QAAQ,IAAI;MACzB,IAAGA,QAAQ,KAAI,IAAI,EAAE,OAAOA,QAAQ;MACpC,OAAO;QAAE,GAAGA,QAAQ;QAAE,GAAGD;MAAY,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBV,OAAO,CAAC,IAAI,CAAC;IACbM,kBAAkB,CAAC,KAAK,CAAC;IACzBH,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,eAAe,GAAGT,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIQ,eAAe,EAAE;MACnBV,YAAY,CAACU,eAAe,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;EAGNtB,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,EAAE;MACbE,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEZ,SAAS,CAAC;IAC9C,CAAC,MAAM;MACLE,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;IACtC;EACF,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,oBACER,OAAA,CAACC,WAAW,CAACoB,QAAQ;IACnBC,KAAK,EAAE;MACLV,eAAe;MACfC,kBAAkB;MAClBP,IAAI;MACJC,OAAO;MACPC,SAAS;MACRC,YAAY;MACZQ,MAAM;MACNF;IACH,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACrB,EAAA,CA1DeF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}