{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\n// export const AuthContext = createContext();\n\nconst {\n  isAuthenticated,\n  user,\n  logout,\n  avatarUrl,\n  setAvatarUrl\n} = useContext(AuthContext); // setAvatarUrlを追加\n\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"token\"));\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      user,\n      setUser,\n      avatarUrl,\n      setAvatarUrl\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"2jqgGjwmcaIvbyQMM1CyLxbW95c=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","isAuthenticated","user","logout","avatarUrl","setAvatarUrl","AuthProvider","children","_s","setUser","setIsAuthenticated","localStorage","getItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/AuthContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useContext, useState } from \"react\";\n\nimport { User } from \"./interfaces/User\";\nimport { AuthContextType } from \"./interfaces/AuthContextType\";\n\nexport const AuthContext = createContext<AuthContextType | undefined>(\n  undefined\n);\n\ntype Props = {\n  children: ReactNode;\n};\n\n// export const AuthContext = createContext();\n\nconst { isAuthenticated, user, logout, avatarUrl, setAvatarUrl } = useContext(AuthContext) as AuthContextType; // setAvatarUrlを追加\n\nexport function AuthProvider({ children }: Props) {\n  const [user, setUser] = useState<User | null>(null);\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(\n    !!localStorage.getItem(\"token\")\n  );\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        setIsAuthenticated,\n        user,\n        setUser,\n        avatarUrl,\n         setAvatarUrl\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK9E,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CACtCM,SACF,CAAC;AAMD;;AAEA,MAAM;EAAEC,eAAe;EAAEC,IAAI;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAa,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAoB,CAAC,CAAC;;AAE/G,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAC/D,MAAM,CAACK,eAAe,EAAES,kBAAkB,CAAC,GAAGd,QAAQ,CACpD,CAAC,CAACe,YAAY,CAACC,OAAO,CAAC,OAAO,CAChC,CAAC;EAED,MAAMT,MAAM,GAAGA,CAAA,KAAM;IACnBM,OAAO,CAAC,IAAI,CAAC;IACbC,kBAAkB,CAAC,KAAK,CAAC;IACzBC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACe,QAAQ;IACnBC,KAAK,EAAE;MACLd,eAAe;MACfS,kBAAkB;MAClBR,IAAI;MACJO,OAAO;MACPL,SAAS;MACRC;IACH,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACX,EAAA,CA3BeF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}