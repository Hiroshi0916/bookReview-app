{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Compressor from \"compressorjs\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const {\n    setIsAuthenticated,\n    setUser,\n    setAvatarUrl\n  } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigation = useNavigate();\n  const [avatarFile, setAvatarFile] = useState(null);\n  const url = \"https://ifrbzeaz2b.execute-api.ap-northeast-1.amazonaws.com\";\n  const handleAvatarChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setAvatarFile(e.target.files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${url}/users`, {\n        name: name,\n        email: email,\n        password: password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        let compressedAvatar = null;\n        if (avatarFile) {\n          // formData.append(\"icon\", avatarFile);\n          await new Promise(resolve => new Compressor(avatarFile, {\n            quality: 0.6,\n            success(result) {\n              compressedAvatar = result;\n              resolve(null);\n            }\n          }));\n        }\n        let formData = new FormData();\n        if (compressedAvatar) {\n          formData.append(\"icon\", compressedAvatar);\n        }\n        setUser(response.data);\n        localStorage.setItem(\"token\", response.data.token);\n\n        // Avatar upload\n        const avatarUploadResponse = await axios.post(`${url}/uploads`, formData, {\n          headers: {\n            Authorization: `Bearer ${response.data.token}`,\n            // replace this with actual JWT token\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        setIsAuthenticated(true);\n        if (avatarUploadResponse.status === 200) {\n          const avatarUrl = avatarUploadResponse.data.iconUrl;\n          localStorage.setItem(\"avatarUrl\", avatarUrl);\n          setAvatarUrl(avatarUrl);\n          navigation(\"/\");\n        }\n      }\n    } catch (err) {\n      const error = err;\n      if (error.response) {\n        setError(`Error ${error.response.data.ErrorCode}: ${error.response.data.ErrorMessageEN}`);\n      } else {\n        console.log(error);\n        setError(\"An error occurred while trying to API /users\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-form\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"reg-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleAvatarChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"V/lEp4Y4lCu2KUMEDZPK92fyVPQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useContext","useState","axios","useNavigate","Compressor","AuthContext","jsxDEV","_jsxDEV","Register","_s","setIsAuthenticated","setUser","setAvatarUrl","name","setName","email","setEmail","password","setPassword","error","setError","navigation","avatarFile","setAvatarFile","url","handleAvatarChange","e","target","files","length","handleSubmit","preventDefault","response","post","headers","status","compressedAvatar","Promise","resolve","quality","success","result","formData","FormData","append","data","localStorage","setItem","token","avatarUploadResponse","Authorization","avatarUrl","iconUrl","err","ErrorCode","ErrorMessageEN","console","log","className","children","onSubmit","type","value","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/techtrain/BookReviewApp/book-review-app/src/Register.tsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios, { AxiosError } from \"axios\";\nimport \"./Register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ErrorResponse } from \"./interfaces/ErrorResponse\";\nimport Compressor from \"compressorjs\";\nimport { AuthContext } from \"./AuthContext\";\nimport { AuthContextType } from \"./interfaces/AuthContextType\";\n\nfunction Register() {\n  const { setIsAuthenticated, setUser, setAvatarUrl } = useContext(\n    AuthContext\n  ) as AuthContextType;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const navigation = useNavigate();\n  const [avatarFile, setAvatarFile] = useState<File | null>(null);\n\n  const url = \"https://ifrbzeaz2b.execute-api.ap-northeast-1.amazonaws.com\";\n  \n\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setAvatarFile(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\n        `${url}/users`,\n        {\n          name: name,\n          email: email,\n          password: password,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (response.status === 200) {\n        let compressedAvatar: File | null = null;\n        if (avatarFile) {\n          // formData.append(\"icon\", avatarFile);\n          await new Promise(\n            (resolve) =>\n              new Compressor(avatarFile, {\n                quality: 0.6,\n                success(result) {\n                  compressedAvatar = result as File;\n                  resolve(null);\n                },\n              })\n          );\n        }\n        let formData = new FormData();\n        if (compressedAvatar) {\n          formData.append(\"icon\", compressedAvatar);\n        }\n\n        setUser(response.data);\n        localStorage.setItem(\"token\", response.data.token);\n\n        // Avatar upload\n        const avatarUploadResponse = await axios.post(\n          `${url}/uploads`,\n          formData,\n          {\n            headers: {\n              Authorization: `Bearer ${response.data.token}`, // replace this with actual JWT token\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        setIsAuthenticated(true);\n\n        if (avatarUploadResponse.status === 200) {\n          const avatarUrl = avatarUploadResponse.data.iconUrl;\n          localStorage.setItem(\"avatarUrl\", avatarUrl);\n          setAvatarUrl(avatarUrl);\n          navigation(\"/\");\n        }\n      }\n    } catch (err: unknown) {\n      const error = err as AxiosError<ErrorResponse>;\n      if (error.response) {\n        setError(\n          `Error ${error.response.data.ErrorCode}: ${error.response.data.ErrorMessageEN}`\n        );\n      } else {\n        console.log(error);\n        setError(\"An error occurred while trying to API /users\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"input-form\">\n      <header className=\"reg-header\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Name\"\n            required\n          />\n\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Email\"\n            required\n          />\n\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n            required\n          />\n\n          <input type=\"file\" accept=\"image/*\" onChange={handleAvatarChange} />\n\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        {error && <p>{error}</p>}\n      </header>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAsB,OAAO;AACzC,OAAO,gBAAgB;AACvB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,kBAAkB;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGZ,UAAU,CAC9DK,WACF,CAAoB;EAEpB,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMoB,UAAU,GAAGlB,WAAW,CAAC,CAAC;EAChC,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAc,IAAI,CAAC;EAE/D,MAAMuB,GAAG,GAAG,6DAA6D;EAGzE,MAAMC,kBAAkB,GAAIC,CAAsC,IAAK;IACrE,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC/CN,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAkB,IAAK;IACjDA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAC9B,GAAET,GAAI,QAAO,EACd;QACEX,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA;MACZ,CAAC,EACD;QACEiB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACD,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B,IAAIC,gBAA6B,GAAG,IAAI;QACxC,IAAId,UAAU,EAAE;UACd;UACA,MAAM,IAAIe,OAAO,CACdC,OAAO,IACN,IAAIlC,UAAU,CAACkB,UAAU,EAAE;YACzBiB,OAAO,EAAE,GAAG;YACZC,OAAOA,CAACC,MAAM,EAAE;cACdL,gBAAgB,GAAGK,MAAc;cACjCH,OAAO,CAAC,IAAI,CAAC;YACf;UACF,CAAC,CACL,CAAC;QACH;QACA,IAAII,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC7B,IAAIP,gBAAgB,EAAE;UACpBM,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,gBAAgB,CAAC;QAC3C;QAEAzB,OAAO,CAACqB,QAAQ,CAACa,IAAI,CAAC;QACtBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,QAAQ,CAACa,IAAI,CAACG,KAAK,CAAC;;QAElD;QACA,MAAMC,oBAAoB,GAAG,MAAM/C,KAAK,CAAC+B,IAAI,CAC1C,GAAET,GAAI,UAAS,EAChBkB,QAAQ,EACR;UACER,OAAO,EAAE;YACPgB,aAAa,EAAG,UAASlB,QAAQ,CAACa,IAAI,CAACG,KAAM,EAAC;YAAE;YAChD,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAEDtC,kBAAkB,CAAC,IAAI,CAAC;QAExB,IAAIuC,oBAAoB,CAACd,MAAM,KAAK,GAAG,EAAE;UACvC,MAAMgB,SAAS,GAAGF,oBAAoB,CAACJ,IAAI,CAACO,OAAO;UACnDN,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEI,SAAS,CAAC;UAC5CvC,YAAY,CAACuC,SAAS,CAAC;UACvB9B,UAAU,CAAC,GAAG,CAAC;QACjB;MACF;IACF,CAAC,CAAC,OAAOgC,GAAY,EAAE;MACrB,MAAMlC,KAAK,GAAGkC,GAAgC;MAC9C,IAAIlC,KAAK,CAACa,QAAQ,EAAE;QAClBZ,QAAQ,CACL,SAAQD,KAAK,CAACa,QAAQ,CAACa,IAAI,CAACS,SAAU,KAAInC,KAAK,CAACa,QAAQ,CAACa,IAAI,CAACU,cAAe,EAChF,CAAC;MACH,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAACtC,KAAK,CAAC;QAClBC,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF;EACF,CAAC;EAED,oBACEb,OAAA;IAAKmD,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBpD,OAAA;MAAQmD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BpD,OAAA;QAAMqD,QAAQ,EAAE9B,YAAa;QAAA6B,QAAA,gBAC3BpD,OAAA;UACEsD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjD,IAAK;UACZkD,QAAQ,EAAGrC,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACmC,KAAK,CAAE;UACzCE,WAAW,EAAC,MAAM;UAClBC,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEF9D,OAAA;UACEsD,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE/C,KAAM;UACbgD,QAAQ,EAAGrC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACmC,KAAK,CAAE;UAC1CE,WAAW,EAAC,OAAO;UACnBC,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEF9D,OAAA;UACEsD,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE7C,QAAS;UAChB8C,QAAQ,EAAGrC,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACmC,KAAK,CAAE;UAC7CE,WAAW,EAAC,UAAU;UACtBC,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEF9D,OAAA;UAAOsD,IAAI,EAAC,MAAM;UAACS,MAAM,EAAC,SAAS;UAACP,QAAQ,EAAEtC;QAAmB;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEpE9D,OAAA;UAAQsD,IAAI,EAAC,QAAQ;UAAAF,QAAA,EAAC;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EACNlD,KAAK,iBAAIZ,OAAA;QAAAoD,QAAA,EAAIxC;MAAK;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC5D,EAAA,CAnIQD,QAAQ;EAAA,QASIL,WAAW;AAAA;AAAAoE,EAAA,GATvB/D,QAAQ;AAqIjB,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}